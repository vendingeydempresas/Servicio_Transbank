const { WebpayPlus, Oneclick, Options, Environment } = require('transbank-sdk');// Configuración para WebpayPlusconst optionsWebpay = new Options(  '597055555532',  // Código de comercio de WebpayPlus (ejemplo de integración)  '579B532A7440BB0C9079DED94D31EA1615BACEB56610332264630D42D0A36B1C',  // Llave secreta de WebpayPlus (prueba)  Environment.Integration);// Configuración para Oneclickconst optionsOneclick = new Options(  '597055555541',  // Código de comercio de Oneclick (ejemplo de integración)  '579B532A7440BB0C9079DED94D31EA1615BACEB56610332264630D42D0A36B1C',  // Llave secreta de Oneclick (prueba)  Environment.Integration);// Función para crear una transacción WebpayPlusasync function createWebpayTransaction({ buyOrder, sessionId, amount, returnUrl }) {  try {    const transactionWebpay = new WebpayPlus.Transaction(optionsWebpay);    const response = await transactionWebpay.create(buyOrder, sessionId, amount, returnUrl);    return {      url: response.url,      token: response.token    };  } catch (error) {    console.error('Error creando la transacción WebpayPlus:', error);    throw new Error('Error al crear la transacción WebpayPlus: ' + error.message);  }}// Función para crear una inscripción Oneclickasync function createOneclickInscription({ buyOrder, sessionId, amount, returnUrl }) {  try {    const inscriptionOneclick = new Oneclick.MallInscription(optionsOneclick);    const response = await inscriptionOneclick.create(buyOrder, sessionId, amount, returnUrl);    return {      url: response.url,      token: response.token    };  } catch (error) {    console.error('Error creando la inscripción Oneclick:', error);    throw new Error('Error al crear la inscripción Oneclick: ' + error.message);  }}module.exports = { createWebpayTransaction, createOneclickInscription };